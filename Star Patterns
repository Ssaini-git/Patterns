// your code goes here
n= 5;
for( let n = 5; n <=5; n++){
    print9(n);

}

function print1(n){
    for( let i = 0; i < n; i++){
           let pattern = '';
           let space = '';
         for( let j = 0; j < n; j++){
             pattern += '*';
         }
         console.log(pattern)
    }
}
function print2(n){
    for( let i = 0; i < n; i++){
           let pattern = '';
           let space = '';
         for( let j = 0; j < i; j++){
             pattern += '*';
         }
         console.log(pattern)
    }
}
function print3(n){
    for( let i = 0; i < n; i++){
           let pattern = '';
           let space = '';
         for( let j = 0; j < i; j++){
             pattern += '*';
         }
         console.log(pattern)
    }
}
function print4(n){
    for( let i = 1; i <= n; i++){
           let pattern = '';
           let space = '';
         for( let j = 1; j <= i; j++){
             pattern += ''+i;
         }
         console.log(pattern)
    }
}
function print5(n){
    for( let i = 1; i <= n; i++){
           let pattern = '';
           let space = '';
         for( let j = 1; j <= i; j++){
             pattern += ''+j;
         }
         console.log(pattern)
    }
}
function print6(n){
    for( let i = 0; i < n; i++){
           let pattern = '';
           let space = '';
         for( let j = 0; j <n-i; j++){
             pattern += '*';
         }
         console.log(pattern)
    }
}
function print7(n){
    for( let i = 0; i < n; i++){
           let pattern = '';
           let space = '';
         for( let j = 0; j <n-i-1; j++){
             space += ' ';
         }
         for( let j = 0; j < 2 * i + 1; j++){
             pattern += '*';
         }
         console.log(space + pattern)
    }
}
function print8(n){
    for( let i = 0; i < n; i++){
           let pattern = '';
           let space = '';
         for( let j = 0; j < i; j++){
             space += ' ';
         }
         for( let j = 0; j < 2*(n -i)-1; j++ ){
             pattern += '*';
         }

         console.log(space + pattern )
          
    }
}
function print9(n){
    print7(n);
    print8(n);
}

    *     
   ***    
  *****   
 *******  
********* 
 ******* 
  *****  
   ***   
    *    
 int n =5;
 for(int i = 0; i < n; i++){

            for(int j = 0; j < n-i-1; j++){
                System.out.print(" ");
            }
            for(int j = 0; j< 2*i + 1; j++){
                System.out.print("*");
            }
            for(int j = 0; j<n-i; j++){
                System.out.print(" ");
           }
            System.out.println();
}
for( int i = 1; i < n; i++){
            for(int j = 0; j<i; j++){
                System.out.print(" ");
            }
            for(int j = 0; j< 2*n-(2*i+1); j++){
                System.out.print("*");
            }
              for(int j = 0; j<i; j++){
                System.out.print(" ");
            }
            System.out.println();
}

=======================================================
*
**
***
**
*
========================================================
  int n =3;
         for( int i =1; i <= 2*n-1; i++){
             int star = i;
             if(i>n) star = 2*n-i;
            for(int j =1; j<=star; j++){
                System.out.print("*");
            }
            System.out.println();
            }
          
        }
===============================================================================
Sample Input 3 :
6
Sample Output 3 :
1 
0 1 
1 0 1 
0 1 0 1 
1 0 1 0 1 
0 1 0 1 0 1 
==============================================================================
public class Solution {
    public static void nBinaryTriangle(int n) {
        // Write your code here.
        
        for( int i = 1; i <= n; i++ ){
            int c = i % 2 == 0 ? 0 : 1;
            for( int j = 1; j<= i; j++ ){
                System.out.print(c+" ");
                c = c == 1 ? 0 : 1; 
            }
            System.out.println();
        }
    }
}
================================================================Symmetry problem always break in parts====================================
4
Sample Output 2 :
1             1
1 2         2 1
1 2 3     3 2 1
1 2 3 4 4 3 2 1
public class Solution {
    public static void numberCrown(int n) {
        // Write your code here.
        for( int i = 1; i<= n; i ++ ){
		    
		    for( int j = 1; j <= i; j++){
		        System.out.print(j+" ");
		    }
		    for( int j = 1; j<=2 * (n-i); j++){
		        System.out.print(" ");
		    }
		    int c = i;
		    for( int j = 1; j <= i; j++){
		         System.out.print(c+" ");
		         c--;
		    }
		    	System.out.println();
		}
    }
}
